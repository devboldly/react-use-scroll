(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{Wiqp:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return b})),o.d(t,"default",(function(){return p}));o("1c7q"),o("abGl"),o("gZHo"),o("Fdmb"),o("Ir+3"),o("2mQt");var l=o("/FXl"),n=o("TjRS"),r=o("qq2E");o("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var l in o)Object.prototype.hasOwnProperty.call(o,l)&&(e[l]=o[l])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useScrollBy.mdx"}});var i={_frontmatter:b},c=n.a;function p(e){var t=e.components,o=function(e,t){if(null==e)return{};var o,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)o=r[l],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,["components"]);return Object(l.b)(c,a({},i,o,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"useScrollBy"),Object(l.b)("h2",{id:"description"},"Description"),Object(l.b)("p",null,"This ",Object(l.b)("a",a({parentName:"p"},{href:"https://reactjs.org/docs/hooks-intro.html"}),"hook")," scrolls the page by the specified vertical and horizontal amount by using the ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window"}),"Window Web API"),"'s ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy"}),"Window.scrollBy")," function."),Object(l.b)("p",null,"Smooth scrolling behavior (native to the browser) is supported by providing ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions"}),"ScrollToOptions"),"."),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"import * as React from 'react';\nimport { useScrollBy } from '@devboldly/react-use-scroll';\n\nconst HookExample = () => {\n  const scrollBy = useScrollBy();\n  return (\n    <div>\n      {/* Hard scroll down by 200 pixels */}\n      <button onClick={() => scrollBy(200, 0)}>Hard Scroll By 200</button>\n      {/* Smooth scroll down by 200 pixels */}\n      <button onClick={() => scrollBy({ top: 200, left: 0, behavior: 'smooth' })}>Smooth Scroll By 200</button>{' '}\n      ...\n    </div>\n  );\n};\n")),Object(l.b)("h2",{id:"signatures"},"Signatures"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"  useScrollBy(options?: { polyfillDisabled?: boolean | undefined; }) => ((scrollToOptions: ScrollToOptions) => void)\n")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"  useScrollBy(options?: { polyfillDisabled?: boolean | undefined; }) => ((top: number, left: number) => void)\n")),Object(l.b)("h3",{id:"params"},"Params"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",a({parentName:"tr"},{align:null}),"Param"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",a({parentName:"tr"},{align:null}),"options"),Object(l.b)("td",a({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"{ polyfillDisabled?:")," ",Object(l.b)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",Object(l.b)("inlineCode",{parentName:"td"},"undefined; }")," ","|"," ",Object(l.b)("inlineCode",{parentName:"td"},"undefined")),Object(l.b)("td",a({parentName:"tr"},{align:null}),"You can optionally provide the hook with ",Object(l.b)("inlineCode",{parentName:"td"},"{ polyfillDisabled: true }")," to disable the polyfill for browsers that don't natively support smooth scrolling. The polyfill is enabled by default and only patches browsers that lack support.")))),Object(l.b)("h3",{id:"return"},"Return"),Object(l.b)("p",null,"The hook returns an overloaded ",Object(l.b)("inlineCode",{parentName:"p"},"function")," that can take either a ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions"}),"ScrollToOptions"),", or ",Object(l.b)("inlineCode",{parentName:"p"},"top")," and ",Object(l.b)("inlineCode",{parentName:"p"},"left"),", for scrolling the page by the provided amount."),Object(l.b)("p",null,"Use the ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions"}),"ScrollToOptions")," signature if you'd like to use smooth scrolling."),Object(l.b)("h4",{id:"scrolltooptions-scrolltooptions--void"},Object(l.b)("inlineCode",{parentName:"h4"},"(scrollToOptions: ScrollToOptions) => void")),Object(l.b)("p",null,"This return function takes a ",Object(l.b)("a",a({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions"}),"ScrollToOptions"),". This enables you to use smooth scrolling implemented by the native browser."),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"top")," or ",Object(l.b)("inlineCode",{parentName:"p"},"left")," are not provided, they are defaulted to ",Object(l.b)("inlineCode",{parentName:"p"},"0"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",a({parentName:"tr"},{align:null}),"Argument"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",a({parentName:"tr"},{align:null}),"scrollToOptions"),Object(l.b)("td",a({parentName:"tr"},{align:null}),Object(l.b)("a",a({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions"}),"ScrollToOptions")),Object(l.b)("td",a({parentName:"tr"},{align:null}),"The scroll options, including the ",Object(l.b)("inlineCode",{parentName:"td"},"top")," and ",Object(l.b)("inlineCode",{parentName:"td"},"left")," scroll deltas in pixels. Provide ",Object(l.b)("inlineCode",{parentName:"td"},"{ behavior: 'smooth' }")," for smooth scrolling.")))),Object(l.b)("h5",{id:"return-function-example"},"Return Function Example:"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"const scrollBy = useScrollBy();\n...\nscrollBy({ top: 200, left: 0, behavior: 'smooth' })}\n")),Object(l.b)("h4",{id:"top-number-left-number--void"},Object(l.b)("inlineCode",{parentName:"h4"},"(top: number, left: number) => void")),Object(l.b)("p",null,"This return function takes vertical and horizontal scroll amounts in pixels. Smooth scrolling is not supported with this method."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",a({parentName:"tr"},{align:null}),"Argument"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",a({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",a({parentName:"tr"},{align:null}),"top"),Object(l.b)("td",a({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"number")),Object(l.b)("td",a({parentName:"tr"},{align:null}),"Pixel amount to scroll by vertically. Supply a negative number to scroll up and a positive number to scroll down.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",a({parentName:"tr"},{align:null}),"left"),Object(l.b)("td",a({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"number")),Object(l.b)("td",a({parentName:"tr"},{align:null}),"Pixel amount to scroll by horizontally. Supply a negative number to scroll left and a positive number to scroll right.")))),Object(l.b)("h5",{id:"return-function-example-1"},"Return Function Example:"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"const scrollBy = useScrollBy();\n...\nscrollBy(200, 0)\n")),Object(l.b)("h2",{id:"disable-polyfill-option"},"Disable Polyfill Option"),Object(l.b)("p",null,"This hook includes a polyfill to support legacy browsers that do not support smooth scrolling natively. It may surprise you (or it may not), but this includes Safari."),Object(l.b)("p",null,"To disable the polyfill, pass the following options:"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"const scrollBy = useScrollBy({ polyfillDisabled: true });\n")),Object(l.b)("p",null,"Doing so will remove smooth scrolling support for browsers that do not support it natively."),Object(l.b)("h2",{id:"hook-example"},"Hook Example"),Object(l.b)(r.a,{mdxType:"ScrollByExample"}),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"import * as React from 'react';\nimport { useScrollBy } from '@devboldly/react-use-scroll';\nimport CreatedBy from '../__docz__/components/CreatedBy';\n\nconst HookExample = (props) => {\n  const scrollBy = useScrollBy();\n  return (\n    <div style={{ border: 'solid 2px #67788a', padding: '20px' }}>\n      <button onClick={() => scrollBy(200, 0)}>Hard Scroll Down 200</button>\n      <button onClick={() => scrollBy({ top: 200, left: 0, behavior: 'smooth' })}>Smooth Scroll Down 200</button>{' '}\n      {[...Array(10).keys()].map((_, i) => (\n        <p key={`lorem-${i}`}>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      ))}\n      <button onClick={() => scrollBy(-200, 0)}>Hard Scroll Up 200</button>\n      <button onClick={() => scrollBy({ top: -200, left: 0, behavior: 'smooth' })}>Smooth Scroll Up 200</button>{' '}\n    </div>\n  );\n}\n")))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useScrollBy.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-scroll-by-mdx-83999954e28e20b6a426.js.map