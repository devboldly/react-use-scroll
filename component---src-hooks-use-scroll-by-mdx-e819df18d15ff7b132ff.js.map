{"version":3,"sources":["webpack:///../src/hooks/useScrollBy.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-hooks-use-scroll-by-mdx-e819df18d15ff7b132ff.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-window-scroll/react-use-window-scroll/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { ScrollByExample } from '../__docz__/components/ScrollByExample';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>useScrollBy</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n      }}>{`hook`}</a>{` scrolls the page by the specified vertical and horizontal amount by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Window\"\n      }}>{`Window Web API`}</a>{`'s `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy\"\n      }}>{`Window.scrollBy`}</a>{` function.`}</p>\n    <p>{`Smooth scrolling behavior (native to the browser) is supported by providing `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\"\n      }}>{`ScrollToOptions`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useScrollBy } from 'react-use-window-scroll';\n\nconst HookExample = () => {\n  const scrollBy = useScrollBy();\n  return (\n    <div>\n      {/* Hard scroll down by 200 pixels */}\n      <button onClick={() => scrollBy(200, 0)}>Hard Scroll By 200</button>\n      {/* Smooth scroll down by 200 pixels */}\n      <button onClick={() => scrollBy({ top: 200, left: 0, behavior: 'smooth' })}>Smooth Scroll By 200</button>{' '}\n      ...\n    </div>\n  );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"signatures\"\n    }}>{`Signatures`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`  useScrollBy(options?: { polyfillDisabled?: boolean | undefined; }) => ((scrollToOptions: ScrollToOptions) => void)\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`  useScrollBy(options?: { polyfillDisabled?: boolean | undefined; }) => ((top: number, left: number) => void)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"params\"\n    }}>{`Params`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{ polyfillDisabled?:`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`boolean`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined; }`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`You can optionally provide the hook with `}<inlineCode parentName=\"td\">{`{ polyfillDisabled: true }`}</inlineCode>{` to disable the polyfill for browsers that don't natively support smooth scrolling. The polyfill is enabled by default and only patches browsers that lack support.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p>{`The hook returns an overloaded `}<inlineCode parentName=\"p\">{`function`}</inlineCode>{` that can take either a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\"\n      }}>{`ScrollToOptions`}</a>{`, or `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{`, for scrolling the page by the provided amount.`}</p>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\"\n      }}>{`ScrollToOptions`}</a>{` signature if you'd like to use smooth scrolling.`}</p>\n    <h4 {...{\n      \"id\": \"scrolltooptions-scrolltooptions--void\"\n    }}><inlineCode parentName=\"h4\">{`(scrollToOptions: ScrollToOptions) => void`}</inlineCode></h4>\n    <p>{`This return function takes a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\"\n      }}>{`ScrollToOptions`}</a>{`. This enables you to use smooth scrolling implemented by the native browser.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{` are not provided, they are defaulted to `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scrollToOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\"\n            }}>{`ScrollToOptions`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The scroll options, including the `}<inlineCode parentName=\"td\">{`top`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`left`}</inlineCode>{` scroll deltas in pixels. Provide `}<inlineCode parentName=\"td\">{`{ behavior: 'smooth' }`}</inlineCode>{` for smooth scrolling.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"return-function-example\"\n    }}>{`Return Function Example:`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const scrollBy = useScrollBy();\n...\nscrollBy({ top: 200, left: 0, behavior: 'smooth' })}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"top-number-left-number--void\"\n    }}><inlineCode parentName=\"h4\">{`(top: number, left: number) => void`}</inlineCode></h4>\n    <p>{`This return function takes vertical and horizontal scroll amounts in pixels. Smooth scrolling is not supported with this method.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`top`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pixel amount to scroll by vertically. Supply a negative number to scroll up and a positive number to scroll down.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`left`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pixel amount to scroll by horizontally. Supply a negative number to scroll left and a positive number to scroll right.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"return-function-example-1\"\n    }}>{`Return Function Example:`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const scrollBy = useScrollBy();\n...\nscrollBy(200, 0)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"disable-polyfill-option\"\n    }}>{`Disable Polyfill Option`}</h2>\n    <p>{`This hook includes a polyfill to support legacy browsers that do not support smooth scrolling natively. It may surprise you (or it may not), but this includes Safari.`}</p>\n    <p>{`To disable the polyfill, pass the following options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const scrollBy = useScrollBy({ polyfillDisabled: true });\n`}</code></pre>\n    <p>{`Doing so will remove smooth scrolling support for browsers that do not support it natively.`}</p>\n    <h2 {...{\n      \"id\": \"hook-example\"\n    }}>{`Hook Example`}</h2>\n    <ScrollByExample mdxType=\"ScrollByExample\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from 'react';\nimport { useScrollBy } from 'react-use-window-scroll';\nimport CreatedBy from '../__docz__/components/CreatedBy';\n\nconst HookExample = (props) => {\n  const scrollBy = useScrollBy();\n  return (\n    <div style={{ border: 'solid 2px #67788a', padding: '20px' }}>\n      <button onClick={() => scrollBy(200, 0)}>Hard Scroll Down 200</button>\n      <button onClick={() => scrollBy({ top: 200, left: 0, behavior: 'smooth' })}>Smooth Scroll Down 200</button>{' '}\n      {[...Array(10).keys()].map((_, i) => (\n        <p key={\\`lorem-\\${i}\\`}>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      ))}\n      <button onClick={() => scrollBy(-200, 0)}>Hard Scroll Up 200</button>\n      <button onClick={() => scrollBy({ top: -200, left: 0, behavior: 'smooth' })}>Smooth Scroll Up 200</button>{' '}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}